((name Quicksort of module__ 0) = (fun (name L of module__ 1) = (pattern ( of literal) -> ( of literal);; pattern ((name Head of module__ 2) of name)/((name Tail of module__ 3) of name)/((name :: of module__ 4) of name) -> (((name Tail of module__ 5) of name), (((name Head of module__ 6) of name), ((name < of module__ 7) of name) of seq), ((name Filter of Std 8) of name), ((name Quicksort of module__ 10) of name), (((name Head of module__ 11) of name) |  of literal), ((name Tail of module__ 12) of name), (((name Head of module__ 13) of name), ((name >= of module__ 14) of name) of seq), ((name Filter of Std 15) of name), ((name Quicksort of module__ 17) of name), ((name ++ of module__ 18) of name), ((name ++ of module__ 19) of name) of seq); of cs) of fun) in ((((int-lit 1) of literal) | ((int-lit 2) of literal) | ((int-lit 3) of literal) | ((int-lit 4) of literal) | ((int-lit 5) of literal) |  of literal), ((name Quicksort of module__ 20) of name) of seq) of bind)
